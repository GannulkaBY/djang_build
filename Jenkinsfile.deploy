pipeline {
  agent {
        node {
            label 'master'
        }
    }
    options {
        buildDiscarder(logRotator(numToKeepStr:'5'))
    }
  stages {
      stage('Cloning repo') {
        steps {
          git url: 'https://github.com/GannulkaBY/django_deploy',
          credentialsId: "github",
          branch: "main" 
        }
      }
      stage('Deploy') {
          steps { 
                  script {                  
                            def host=params.Server
                            def folder=params.Folder
                            def version=params.Version
                            sh '''./deploy.sh "''' + host + '''" "''' + folder + '''" "''' + version +'''"'''
              }         
          }
      }
      stage('Test connection') {
          steps { 
                  script {    
                            def host=params.Server              
                            sh '''curl --write-out %{http_code} --silent --output /dev/null http://"''' + host + '''":80 > commandResult'''
                            env.status = readFile('commandResult').trim()
                            sh "echo ${env.status}"
                            if (env.status == '200') {
                                currentBuild.result = "SUCCESS"
                            }
                            else {
                                currentBuild.result = "FAILURE"
                            }
                  }
          
          }
      }
  }
  post {
      success {
        slackSend (color: '#008000', message: "SUCCESS: Job '(${env.BUILD_URL})")
      }
      failure {
          slackSend (color: '#FF0000', message: "FAIL: Job '(${env.BUILD_URL})")
      }
  }
}